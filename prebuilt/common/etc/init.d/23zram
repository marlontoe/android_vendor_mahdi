#!/system/bin/sh
LOG="/data/zram.log"
BBOX="/system/xbin/busybox"
NUMCPUS=`grep -c ^processor /proc/cpuinfo`
### ASSUME SINGLE CORE IF WE GET ANY ERRORS
[ "$NUMCPUS" != 0 ] || NUMCPUS=1
### DECREMENTED NUMCUPS
DECR_NUMCPUS=$(($NUMCPUS - 1))
### CALCULATE ZRAMSIZE
RAMSIZE=$(grep MemTotal /proc/meminfo | grep -E --only-matching '[[:digit:]]+')
ZRAMSIZE=$(($RAMSIZE * 1024 / 2))

echo "creating: zram device(s)=$NUMCPUS | size (per device)=$ZRAMSIZE" >> "$LOG"

### INSMOD ZRAM-MODULE ON BOOT
if $BBOX [ -f /system/lib/modules/zram.ko ]; then
    if $BBOX [ -z "`$BBOX lsmod | $BBOX grep zram`" ]; then
        $BBOX insmod /system/lib/modules/zram.ko; >> "$LOG"
    fi;
    $BBOX modprobe zram zram_num_devices=$NUMCUPS;
fi; sleep 1

### CREATE ZRAM DEVICE(S)
for i in $(seq 0 $DECR_NUMCPUS); do
        if [ "$(grep /dev/block/zram$i /proc/swaps)" != "" ]; then
		$BBOX swapoff /dev/block/zram$i; >> "$LOG"
	sleep 1
		$BBOX echo 1 > /sys/block/zram$i/reset; >> "$LOG"
sleep 1
fi; 	done;

for i in $(seq 0 $DECR_NUMCPUS); do
		$BBOX echo $ZRAMSIZE > /sys/block/zram$i/disksize; >> "$LOG"
	done;
for i in $(seq 0 $DECR_NUMCPUS); do
		$BBOX mkswap /dev/block/zram$i; >> "$LOG"
	done;
for i in $(seq 0 $DECR_NUMCPUS); do
		$BBOX swapon -p 100 /dev/block/zram$i; >> "$LOG"
        done; sleep 3

echo "zram enabled | `date`" >> "$LOG"
exit
